@model BookMate.Models.Purchase

@{
    ViewBag.Title = "ConfirmOrder";
}

<h2>ConfirmOrder</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Purchase</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <h3> @ViewBag.BookName</h3>
    </div>

    @Html.HiddenFor(model => model.UId)
    @Html.HiddenFor(model => model.BId)
    @Html.HiddenFor(model => model.PAmount)

    <div class="form-group">
        <label class="control-label col-md-2">Address</label>
        <div class="col-md-10">
            @Html.DropDownList("AId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PQuantity, new { htmlAttributes = new { @class = "form-control", min = 1, max = ViewBag.Quantity } })
            @Html.ValidationMessageFor(model => model.PQuantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Amount</label>
        <div class="col-md-10">
            <input value="@ViewBag.Price" class="form-control" readonly />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Confirm Order" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
